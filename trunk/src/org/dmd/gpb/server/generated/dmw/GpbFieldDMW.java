//	---------------------------------------------------------------------------
//	dark-matter-data
//	Copyright (c) 2010 dark-matter-data committers
//	---------------------------------------------------------------------------
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	---------------------------------------------------------------------------
package org.dmd.gpb.server.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:351)
import org.dmd.dmc.*;                                         // If any attributes - (BaseDMWGeneratorNewest.java:956)
import org.dmd.dmc.types.DefinitionName;                      // Is named by - (BaseDMWGeneratorNewest.java:935)
import org.dmd.dms.ClassDefinition;                           // Passing derived class def up the hierarchy - (BaseDMWGeneratorNewest.java:940)
import org.dmd.dms.generated.dmo.MetaDMSAG;                   // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:945)
import org.dmd.dms.generated.types.DmcTypeModifierMV;         // Required for MODREC constructor - (BaseDMWGeneratorNewest.java:944)
import org.dmd.gpb.server.extended.GpbDefinition;             // Derived class - (BaseDMWGeneratorNewest.java:1117)
import org.dmd.gpb.server.extended.GpbField;                  // Required for getModificationRecorder() - (BaseDMWGeneratorNewest.java:949)
import org.dmd.gpb.server.extended.GpbType;                   // Is reference type - (BaseDMWGeneratorNewest.java:976)
import org.dmd.gpb.shared.generated.dmo.GpbFieldDMO;          // Class not auxiliary or abstract - (BaseDMWGeneratorNewest.java:1121)
import org.dmd.gpb.shared.generated.types.GpbTypeREF;         // Is reference type REF - (BaseDMWGeneratorNewest.java:984)


/**
 * null
 * <P>
 * Generated from the dmdgpb schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:368)
 */
abstract public class GpbFieldDMW extends GpbDefinition implements DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:447)
    public GpbFieldDMW() {
        super(new GpbFieldDMO(), org.dmd.gpb.server.generated.DmdgpbSchemaAG._GpbField);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:453)
    public GpbFieldDMW(DmcTypeModifierMV mods) {
        super(new GpbFieldDMO(mods), org.dmd.gpb.server.generated.DmdgpbSchemaAG._GpbField);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:495)
    public GpbField getModificationRecorder(){
        GpbField rc = new GpbField();
        rc.setName(getName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:516)
    public GpbFieldDMW(GpbFieldDMO obj) {
        super(obj, org.dmd.gpb.server.generated.DmdgpbSchemaAG._GpbField);
    }

    public GpbField cloneIt() {
        GpbField rc = new GpbField();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public GpbFieldDMO getDMO() {
        return((GpbFieldDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNewest.dumpWrapper(BaseDMWGeneratorNewest.java:531)
    protected GpbFieldDMW(GpbFieldDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.getAccessFunctions(BaseDMWGeneratorNewest.java:1166)
    public DefinitionName getObjectName(){
        return(((GpbFieldDMO) core).getName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((GpbFieldDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof GpbFieldDMW){
            return( getObjectName().equals( ((GpbFieldDMW) obj).getObjectName()) );
        }
        return(false);
    }

    /**
     * @return A GpbType object.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1303)
    public GpbType getGpbType(){
        GpbTypeREF ref = ((GpbFieldDMO) core).getGpbType();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((GpbType)ref.getObject().getContainer());
    }

    /**
     * Sets the gpbType to the specified value.
     * @param value A value compatible with GpbTypeREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1388)
    public void setGpbType(GpbType value) {
        ((GpbFieldDMO) core).setGpbType(value.getDMO());
    }

    /**
     * Sets the gpbType to the specified value.
     * @param value A value compatible with GpbTypeREF
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1397)
    public void setGpbType(Object value) throws DmcValueException {
        ((GpbFieldDMO) core).setGpbType(value);
    }

    /**
     * Removes the gpbType attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGeneratorNewest.formatSV(BaseDMWGeneratorNewest.java:1488)
    public void remGpbType(){
        ((GpbFieldDMO) core).remGpbType();
    }


}
