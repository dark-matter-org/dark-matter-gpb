AttributeDefinition
name			cplusplusType
dmdID			1
type			String
description		An indication of the C++ type associated with a GPB attribute type.

AttributeDefinition
name			dmType
dmdID			2
type			String
description		An indication of the dark-matter type associated with a GPB attribute type.

AttributeDefinition
name			hint
dmdID			3
type			String
description		A short description of something that can be dumped as one line comment in a .proto spec.
 For longer explanations, use the description attribute.

AttributeDefinition
name			defaultValue
dmdID			4
type			String
description		The default value to be used for a GpbType or for an GpbAttribute.

AttributeDefinition
name			sizeInBytes
dmdID			5
type			Integer
description		The size in bytes that a particular primitive type would occupy on the wire.

AttributeDefinition
name			gpbType
dmdID			6
type			GpbType
description		A reference to a GpbType definition.

//AttributeDefinition
//name			isMessageType
//dmdID			7
//type			Boolean
//description		Indicates if an internally generated GpbType is associated with a GpbMessage.

AttributeDefinition
name			definedInGpbModule
dmdID			8
type			GpbModule
description		Indicates the name of the GpbModule in which a definition is defined.

//AttributeDefinition
//name			usesDefsFrom
//dmdID			9
////type			GpbModule
//type			String
//description		Indicates the name of a GpbModule from which definitions are included.

AttributeDefinition
name			pythonType
dmdID			10
type			String
description		An indication of the Python type associated with a GPB attribute type.

AttributeDefinition
name			javaType
dmdID			11
type			String
description		An indication of the Java type associated with a GPB attribute type.

AttributeDefinition
name			basedOnEnum
dmdID			12
type			EnumDefinition
description		Indicates that a GPB enum is based on a dark-matter schema defined enumeration.

AttributeDefinition
name			dependsOnGpbModule
dmdID			20
type			GpbModule
valueType       MULTI
description		Indicates the GpbModule on which something depends.

AttributeDefinition
name			package
dmdID			21
type			String
description 	The package associated with a .proto file.

//AttributeDefinition
//name			elements
//dmdID			22
//type			GpbElement
//valueType		MULTI
//description		The elements attribute indicates a list of GpbElements that comprise a GpbMessage, this
// includes GpbFields, GpbEnums and other GpbMessages.

AttributeDefinition
name			mainElements
dmdID			23
type			GpbCompositeType
valueType		MULTI
description		The mainElements attribute indicates a list of GpbCompositeTypes that comprise a GpbProtoFile. Main elements
 include messages and enumerations.

AttributeDefinition
name			field
dmdID			24
type			GpbFieldIndicator
valueType		MULTI
description		A set of fields in a GpbMessage.

AttributeDefinition
name			tag
dmdID			25
type			Integer
description		As you can see, each field in the message definition has a unique numbered tag.
 These tags are used to identify your fields in the message binary format, and should not be
 changed once your message type is in use. Note that tags with values in the range 1 through 15
 take one byte to encode, including the identifying number and the field's type (you can find
 out more about this in Protocol Buffer Encoding). Tags in the range 16 through 2047 take two
 bytes. So you should reserve the tags 1 through 15 for very frequently occurring message
 elements. Remember to leave some room for frequently occurring elements that might be added
 in the future.
 <p/>
 The smallest tag number you can specify is 1, and the largest is 229 - 1, or 536,870,911.
 You also cannot use the numbers 19000 though 19999 

AttributeDefinition
name			fieldRule
dmdID			26
type			FieldRuleEnum
description		Indicates if a field is required, optional or repeated. See the note about 
 required fields as part of the FieldRuleEnum.
 <p/>
 For historical reasons, repeated fields of basic numeric types aren't encoded as efficiently
 as they could be. New code should use the special option [packed=true] to get a more efficient encoding.
 <br/>
 For example: repeated int32 samples = 4 [packed=true];

AttributeDefinition
name			import
dmdID			27
type			String
valueType		MULTI
description 	An import associated with a .proto file.

AttributeDefinition
name			embed
dmdID			28
type			GpbCompositeType
valueType		MULTI
description 	The embed attribute is used to indicate that an existing GpbEnum or GpbMessage
 description should be embedded directly within a message definition.

//AttributeDefinition
//name			basedOnMainElement
//dmdID			29
//type			GpbMainElement
//description		The original GpbMainElement (a message or enum) on which a GpbType is based.

 